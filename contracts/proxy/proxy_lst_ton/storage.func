#include "../../common/params.func";

(int, int, int, int, slice, slice, slice, slice) load_data() inline {
  
  slice ds = get_data().begin_parse();
  slice data_cell = ds~load_ref().begin_parse();
  int lc_proxy_type = data_cell~load_uint(32);
  int lc_proxy_id = data_cell~load_uint(32);
  int lc_lst_ton_price = data_cell~load_uint(64);
  int lc_capacity = data_cell~load_coins();

  slice auth_address_cell = ds~load_ref().begin_parse();
  slice lc_utonic_minter = auth_address_cell~load_msg_addr();
  slice lc_admin_address = auth_address_cell~load_msg_addr();

  slice receiver_cell = ds~load_ref().begin_parse();
  slice lc_lst_ton_wallet = receiver_cell~load_msg_addr();
  slice lc_lst_ton_receiver_address = receiver_cell~load_msg_addr();

  return (
    lc_proxy_type,
    lc_proxy_id,
    lc_lst_ton_price,
    lc_capacity,
    lc_utonic_minter,
    lc_admin_address,
    lc_lst_ton_wallet,
    lc_lst_ton_receiver_address
  );
}

() save_data(
    int lc_proxy_type,
    int lc_proxy_id,
    int lc_lst_ton_price,
    int lc_capacity,
    slice lc_utonic_minter,
    slice lc_admin_address, 
    slice lc_lst_ton_wallet, 
    slice lc_lst_ton_receiver_address) impure inline {
  
  cell data_cell = begin_cell()
    .store_uint(lc_proxy_type, 32)
    .store_uint(lc_proxy_id, 32)
    .store_uint(lc_lst_ton_price, 64)
    .store_coins(lc_capacity)
    .end_cell();

  cell auth_address_cell = begin_cell()
    .store_slice(lc_utonic_minter)
    .store_slice(lc_admin_address)
    .end_cell();
  
  cell receiver_cell = begin_cell()
    .store_slice(lc_lst_ton_wallet)
    .store_slice(lc_lst_ton_receiver_address)
    .end_cell();
  
  set_data(begin_cell()
      .store_ref(data_cell)
      .store_ref(auth_address_cell)
      .store_ref(receiver_cell)
      .end_cell()
    );
}